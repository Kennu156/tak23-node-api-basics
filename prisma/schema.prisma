generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           Int    @id @default(autoincrement())
  email        String @unique
  passwordHash String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Book {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  year        Int

  categories BookCategory[]
  authors    BookAuthors[]

  publisherId Int
  publisher   Publisher @relation(fields: [publisherId], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("books")
}

model Publisher {
  id   Int    @id @default(autoincrement())
  name String @unique

  books Book[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Author {
  id         Int    @id @default(autoincrement())
  first_name String
  last_name  String

  books BookAuthors[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique

  books BookCategory[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("categories")
}

model BookAuthors {
  book_id Int
  book    Book @relation(fields: [book_id], references: [id])

  author_id Int
  author    Author @relation(fields: [author_id], references: [id])

  @@id([book_id, author_id])
  @@map("book_authors")
}

model BookCategory {
  book    Book @relation(fields: [book_id], references: [id], onDelete: Cascade)
  book_id Int

  category    Category @relation(fields: [category_id], references: [id], onDelete: Cascade)
  category_id Int

  @@id([book_id, category_id])
  @@map("books_categories")
}
